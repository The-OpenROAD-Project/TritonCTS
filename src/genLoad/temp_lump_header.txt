library(load__VOLT_V__LTEMP_C) { 
  comment : "";
  revision : "X";
  delay_model : table_lookup;
  capacitive_load_unit (X,pf);
  current_unit : "XuA";
  leakage_power_unit : "XpW";
  pulling_resistance_unit : "Xkohm";
  time_unit : "Xps";
  voltage_unit : "XV";
  default_cell_leakage_power : X;
  default_fanout_load : X;
  default_inout_pin_cap : X;
  default_input_pin_cap : X;
  default_leakage_power_density : X;
  default_max_transition : XXX;
  default_output_pin_cap : X;
  default_wire_load_mode : top;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : XX;
  input_threshold_pct_rise : XX;
  nom_process : X;
  nom_temperature : X;
  nom_voltage : X;
  output_threshold_pct_fall : XX;
  output_threshold_pct_rise : XX;
  slew_derate_from_library : XX;
  slew_lower_threshold_pct_fall : XX;
  slew_lower_threshold_pct_rise : XX;
  slew_upper_threshold_pct_fall : XX;
  slew_upper_threshold_pct_rise : XX;
  operating_conditions (_CORNER___VOLT_v__LTEMP_c) {
    process : X;
    temperature : _TEMP_;
    voltage : _VOLT_;
  }
  input_voltage (default_VDD_VSS_input) {
    vih : X;
    vil : X;
    vimax : X;
    vimin : X;
  }
  output_voltage (default_VDD_VSS_output) {
    voh : X;
    vol : X;
    vomax : X;
    vomin : X;
  }
  wire_load (Zero) {
    area : X;
    capacitance : XX;
    resistance : XXX;
    slope : X;
    fanout_length (X, X);
  }
  wire_load (Small) {
    area : XXXe-XX;
    capacitance : XX;
    resistance : XXX;
    slope : XX;
    fanout_length (X, XX);
  }
  wire_load (Medium) {
    area : XXXe-XX;
    capacitance : XX;
    resistance : XXX;
    slope : XX;
    fanout_length (X, X);
  }
  wire_load (Large) {
    area : XXXe-XX;
    capacitance : XX;
    resistance : XXX;
    slope : XX;
    fanout_length (X, X);
  }
  wire_load (Huge) {
    area : XXXe-XX;
    capacitance : XX;
    resistance : XXX;
    slope : X;
    fanout_length (X, X);
  }
  default_wire_load : "Small";
  default_operating_conditions : _CORNER__VOLT_v__LTEMP_c;
  lu_table_template (constraint_template) {
    variable_X : constrained_pin_transition;
    variable_X : related_pin_transition;
    index_X ("X, X, X, XX");
    index_X ("X, X, X, XX");
  }
  lu_table_template (delay_template) {
    variable_X : input_net_transition;
    variable_X : total_output_net_capacitance;
    index_X ("X, X, XX, XX, X, X, X, XX");
    index_X ("X, X, XX, XX, X, X, X, XX");
  }
  lu_table_template (mpw_constraint_template) {
    variable_X : constrained_pin_transition;
    index_X ("X, X, X, XX");
  }
  lu_table_template (mpw_template) {
    variable_X : related_pin_transition;
    index_X ("X, X, X, XX");
  }
  power_lut_template (passive_power_template) {
    variable_X : input_transition_time;
    index_X ("X, X, XX, XX, X, X, X, XX");
  }
  power_lut_template (power_template) {
    variable_X : input_transition_time;
    variable_X : total_output_net_capacitance;
    index_X ("X, X, XX, XX, X, X, X, XX");
    index_X ("X, X, XX, XX, X, X, X, XX");
  }
  lu_table_template (waveform_template_name) {
    variable_X : input_net_transition;
    variable_X : normalized_voltage;
    index_X ("X, XX, XX, XX, XX, XX, XX, XX");
    index_X ("X, X, X, X, X, X, X, X, X, X, XX, XX, XX, XX, XX, XX, XX");
  }
  normalized_driver_waveform (waveform_template_name) {
    index_X ("XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X");
    index_X ("X, XXX, XXX, XXX, XXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X");
    values ( \
      "X, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XX, XXX, XXXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXXX, XXX, XXX, XXX, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X", \
      "X, XX, XX, XXX, XXX, XXX, XXXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX", \
      "X, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXXX, XXXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX", \
      "X, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.XX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, XXX", \
      "X, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.XX, X.X, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, XXX, XXX, XXX, XXX" \
    );
  }
  normalized_driver_waveform (waveform_template_name) {
    driver_waveform_name : "INVreference_XXN_AXPPXXCTS_CXe-XX:fall";
    index_X ("XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X");
    index_X ("X, XXX, XXX, XXX, XXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X");
    values ( \
      "X, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XX, XX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XX, XX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X", \
      "X, XXX, XX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, X.XX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X", \
      "X, XX, XXXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.XX, X.X, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, XXX", \
      "X, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.XX, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, XX", \
      "X, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.XX, X.XX, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, XXX, XXX, XXX" \
    );
  }
  normalized_driver_waveform (waveform_template_name) {
    index_X ("XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X");
    index_X ("X, XXX, XXX, XXX, XXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X");
    values ( \
      "X, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXXX, XXX, XXX, XXX, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX", \
      "X, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.XX", \
      "X, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, XXX, XXX, XXX, XXX" \
    );
  }
  normalized_driver_waveform (waveform_template_name) {
    driver_waveform_name : "INVreference_XXN_AXPPXXCTS_CXe-XX:rise_#XX";
    index_X ("XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X");
    index_X ("X, XXX, XXX, XXX, XXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X");
    values ( \
      "X, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XX, XXX, XXXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXXX, XXX, XXX, XXX, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X", \
      "X, XX, XX, XXX, XXX, XXX, XXXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX", \
      "X, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXXX, XXXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX", \
      "X, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.XX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, XXX", \
      "X, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, XXX, XXX, XXX, XXX" \
    );
  }
  normalized_driver_waveform (waveform_template_name) {
    index_X ("XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X");
    index_X ("X, XXX, XXX, XXX, XXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X");
    values ( \
      "X, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XX, XX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XX, XX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X", \
      "X, XXX, XX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, X.XX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X", \
      "X, XXX, XXXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXXX, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.XX, X.X, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, XXX", \
      "X, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.XX, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, XX", \
      "X, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.XX, X.XX, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, XXX, XXX, XXX" \
    );
  }
  normalized_driver_waveform (waveform_template_name) {
    index_X ("XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X");
    index_X ("X, XXX, XXX, XXX, XXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X");
    values ( \
      "X, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXXX, XXXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXXX, XXX, XXXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXXX, XXXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, X.X", \
      "X, XX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, X.XX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, X.X, X.X", \
      "X, X, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXXX, XXXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.XX, X.X, X.XX, X.XX, X.X, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, X.XX, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, XX, XXX, XXX" \
    );
  }
  normalized_driver_waveform (waveform_template_name) {
    index_X ("XXX, XXX, XXX, XXX, XXX, XXX, X.X, X.X");
    index_X ("X, XXX, XXX, XXX, XXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, XXXX, X");
    values ( \
      "X, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XX, XXX, XXX, XXX, XX, XX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XXX, XXX, XXX, XXX, XXXX, XXX", \
      "X, XXX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XXX, XX, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX", \
      "X, XX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXXX, XXX, XXX, X.XX, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X", \
      "X, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXX, XXXX, XXX, XXX, XXX, XXX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.X, X.XX, X.X, X.X, X.X, X.X, X.X, X.X, X.X, XXX" \
    );
  }

